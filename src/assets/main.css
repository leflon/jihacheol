:root {
	--primary-color: #f08225;
	--secondary-color: #e07116;
}

@font-face {
	font-family: 'Parisine';
	src: url('/fonts/SeoulNamsanM.ttf');
	font-weight: 400;
	font-style: normal;
	font-display: swap;
}
@font-face {
	font-family: 'Parisine';
	src: url('/fonts/SeoulNamsanEB.ttf');
	font-weight: 600;
	font-style: normal;
	font-display: swap;
}

* {
	box-sizing: border-box;
}

body {
	font-family: 'Parisine', serif;
	margin: 0;
	background: url('/images/tiles.webp');
	background-size: 100px;
	display: flex;
	flex-direction: column;
	min-height: 100svh;
}

button {
	background-color: var(--primary-color);
	color: white;
	font-family: 'Parisine', serif;
	border: none;
	border-radius: 4px;
	padding: 10px 15px;
	font-size: 16px;
	cursor: pointer;
	transition: background-color 0.3s ease;
	&.secondary {
		background: #808080;
	}
}

button:hover {
	background-color: var(--secondary-color);
	&.secondary {
		background-color: #707070;
	}
}

button:active {
	transform: translateY(1px);
}

button[disabled] {
	background-color: #ccc !important;
	cursor: not-allowed;
	transform: none !important;
}

/* Attribution is given in the footer */
.leaflet-control-attribution {
	display: none;
}

/* Because of how Svelte forces SVG import as a component,
   we can only style the svg through global styles */
svg {
	width: 300px !important;
	height: 300px !important;
	overflow: hidden;
	position: relative !important;
	transform: scale(2) !important;

	& * {
		transform-origin: center center;
		transform-box: fill-box;
	}

	& .focused {
		--scale: 2.5;
		&:is(g) {
			/* Matches rectangles (connecting stops) which look too big on 2.5 */
			--scale: 1.5;
		}
		animation: outline 1.5s ease;
		border-radius: 50%;
		transform: scale(var(--scale));
		transition: transform 0.2s ease;
		cursor: pointer;

		&:hover {
			transform: scale(calc(var(--scale) * 1.5));
		}
	}
}

.minimap.hard svg {
	& > * {
		stroke: black !important;
	}
	& circle {
		/* All single line stops */
		stroke: black !important;
	}
	& g.marker circle {
		/* Connecting stop */
		stroke: black !important;
		fill: black !important;
	}
	& rect {
		/* Line name rectangles */
		fill: black;
		stroke: black;
	}
	& g.marker rect {
		/* Connection stop frame */
		fill: white;
	}
}
@keyframes outline {
	from {
		outline: 1.5px solid rgba(0, 0, 0, 0);
		outline-offset: 0;
	}
	40%,
	65% {
		outline: 1.5px solid red;
		outline-offset: 3px;
	}
	to {
		outline: 1.5px solid #0000;
		outline-offset: 9px;
	}
}
